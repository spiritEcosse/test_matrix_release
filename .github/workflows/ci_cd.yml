# This is a basic workflow to help you get started with the GitHub Auto-Release on Commit Action.

name: AutoRelease

on: [push]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    build:
        continue-on-error: false
        strategy:
            matrix:
                version: [ 10, 12 ]
                os: [ubuntu-latest]

        runs-on: ${{ matrix.os }}
        steps:
            - run: echo Version of ${{ matrix.os }} ${{ matrix.version }}
            - uses: actions/checkout@v3

            - name: Prepare release
              if: contains(github.ref, 'refs/tags/')
              run: mkdir -p output

            - name: Build project
              uses: nicledomaS/cmake_build_action@v1.4

            - name: Create a file
              if: contains(github.ref, 'refs/tags/')
              run: echo ${{ matrix.version }} > output/${{ matrix.version }}_my_file.txt

            - name: Upload RPM "${{ matrix.version }}"
              if: contains(github.ref, 'refs/tags/')
              uses: actions/upload-artifact@v3
              with:
                  name: txt-${{ matrix.version }}
                  path: output
                  if-no-files-found: error


    release:
        name: Release
        continue-on-error: false
        # The type of runner that the job will run on
        needs: build
        runs-on: ubuntu-latest
        if: contains(github.ref, 'refs/tags/')

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            - name: Download txt
              uses: actions/download-artifact@v3
              with:
                  name: txt-10

            - name: Extract Version Name
              id: extract_name
              uses: actions/github-script@v4
              with:
                  result-encoding: string
                  script: |
                      return context.payload.ref.replace(/refs\/tags\//, '');

#            - name: setup python
#              uses: actions/setup-python@v4
#              with:
#                python-version: 3.11 #install the python needed

            - name: Install jira
              run: |
                python -m pip install --upgrade pip
                pip install jira

            - name: Generate notes from jira
              id: generate_notes
              with:
                  result-encoding: string
                  shell: python
                  script: |
                      import os
                      print(os.environ['PATH'])

            - name: Create a release
              uses: softprops/action-gh-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
              with:
                  name: Release ${{ steps.extract_name.outputs.result }}
                  draft: false
                  prerelease: false
                  body: ${{ steps.generate_notes.outputs.result }}
                  files: '*.txt'
